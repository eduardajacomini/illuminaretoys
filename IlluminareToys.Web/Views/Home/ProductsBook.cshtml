@using IlluminareToys.Domain.Shared.Extensions;
@model IEnumerable<GetProductOutput>
@{
    Layout = "~/Views/Shared/AdminLTE/_Layout.cshtml";
    ViewData["Title"] = "Illuminare Toys - Catálogo";
    //var tags = ViewBag.Tags as IEnumerable<GetTagOutput>;
    //var selectedTags = ViewBag.SelectedTags as IEnumerable<Guid> ?? new List<Guid>();
}



<div class="col-md-12">
    @if (Model.Any())
    {
        <div id="carouselExampleIndicators" class="carousel slide" data-ride="carousel">
            @*<ol class="carousel-indicators">
                    <li data-target="#carouselExampleIndicators" data-slide-to="0" class="active"></li>
                    <li data-target="#carouselExampleIndicators" data-slide-to="1"></li>
                    <li data-target="#carouselExampleIndicators" data-slide-to="2"></li>
                </ol>*@
            <div class="carousel-inner">
                @foreach (var product in Model)
                {
                    <div class="carousel-item @(Model.FirstOrDefault().Equals(product) ? "active" : "")">

                        <a href="@product.ImageUrl"
                           data-toggle="lightbox"
                           data-title="@product.Description"
                           data-footer="@product.PriceFormatted">
                            @if (product.ImageUrl is not null)
                            {
                                <img class="d-block w-100 product-image"
                                     src="@product.ImageUrl">
                            }
                            else
                            {
                                <img class="d-block w-100 product-image"
                                     src="~/img/no-image-available.jpg">
                            }
                        </a>
                        <div class="product-container">
                            <h5 class="product-description">@product.Description</h5>
                            <p class="product-info"><b>@product.PriceFormatted</b> - @product.CategoryDescription</p>
                            <p class="product-info">Estoque: <b>@product.CurrentStock</b></p>
                            <div class="badges-product-tags">
                                @foreach (var tag in product.Tags)
                                {
                                    <h3><span class="badge bg-primary m-1">@tag.Tag.Description</span></h3>
                                }
                            </div>
                            <div class="share-button" onclick="onClickShareWhatsapp('@product.ImageUrl', '@product.Description', '@product.PriceFormatted')">
                                <img src="~/img/whatsapp.svg" width="30" style="margin-right: 5px;" />
                                <span>Compartilhar no WhatsApp</span>
                            </div>
                        </div>
                    </div>
                }
            </div>
            <a class="carousel-control-prev" href="#carouselExampleIndicators" role="button" data-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="sr-only">Anterior</span>
            </a>
            <a class="carousel-control-next" href="#carouselExampleIndicators" role="button" data-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="sr-only">Próximo</span>
            </a>
        </div>
    }
    else
    {
        <h3 class="display-5 text-bold text-center">Nenhum produto encontrado para os critérios informados.</h3>
    }
</div>

<style>
    .share-options {
        flex-direction: column;
    }

    .share-button {
        padding: 10px;
        border-radius: 10px;
        box-shadow: 0 0 2px #888;
        text-align: center;
        margin-top: 24px;
        width: 60%;
        background-color: #24cc63;
    }

        .share-button:hover {
            cursor: pointer;
            opacity: 0.7;
        }

    .bg-primary {
        background-color: #f012be !important;
    }

    .badges-product-tags {
        display: flex;
        flex-direction: row;
    }

    .product-description {
        font-size: 30px;
    }

    .product-info {
        font-size: 26px;
    }

    .product-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        margin-top: 10px;
        margin-bottom: 10px;
    }

    .product-image {
        /*        height: 50%px;*/
        width: 300px;
        height: 1000px;
    }

    @@media only screen and (max-width: 480px) {
        .product-image {
            width: 400px;
            height: 400px;
            /* width: 300px;
            height: 300px;*/
        }
    }

    @@media only screen and (max-width: 820px) {
        .product-image {
            width: 500px;
            height: 500px;
            /* width: 300px;
            height: 300px;*/
        }
    }

    .carousel-control-prev-icon {
        background-image: url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='%202020' viewBox='0 0 8 8'%3E%3Cpath d='M5.25 0l-4 4 4 4 1.5-1.5-2.5-2.5 2.5-2.5-1.5-1.5z'/%3E%3C/svg%3E") !important;
    }

    .carousel-control-next-icon {
        background-image: url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='%202020' viewBox='0 0 8 8'%3E%3Cpath d='M2.75 0l-1.5 1.5 2.5 2.5-2.5 2.5 1.5 1.5 4-4-4-4z'/%3E%3C/svg%3E") !important;
    }

    .carousel-caption > h5 {
        color: black;
    }

    .select2-container--default .select2-selection--multiple .select2-selection__choice {
        color: black;
    }
</style>

<script>
    $(document).on('click', '[data-toggle="lightbox"]', function (event) {
        event.preventDefault();
        $(this).ekkoLightbox();
    });

    $(document).ready(function () {
        $('#select-tags').select2();
    });

    const onClickShareWhatsapp = (imageUrl, productDescription, productPrice) => {
        const title = "Compartilhar o produto pelo WhatsApp";
        const inputLabel = "Informe o WhatsApp do cliente. Ex: 66 9999-9999";
        const inputValidator = (value) => {
            if (!value) {
                return 'Você precisa informar um número de telefone!'
            }
            const phoneNumber = formatPhone(`${value}`);
            const finalPhoneNumber = `+55 ${phoneNumber}`

            var regExp = /\+\d{2}\s\(\d{2}\)\s\d{4,5}-?\d{4}/g;
            var isValid = regExp.test(finalPhoneNumber);

            if (!isValid) {
                return 'Informe o número de telefone corretamente.'
            }
        };
        const handleResult = (result) => {
            if (!result.isConfirmed) {
                return;
            }

            const phoneNumber = formatPhone(`${result.value}`);
            const finalPhoneNumber = `+55 ${phoneNumber}`
            const phoneOnlyNumbers = onlyNumbers(finalPhoneNumber);


            const whatsappMessage = `Olá! Estou te enviando mais informações sobre o produto *${productDescription}*. Preço: ${productPrice} | Foto: ${imageUrl}`;
            const whatsappLink = `https://api.whatsapp.com/send?phone=${phoneOnlyNumbers}&text=${whatsappMessage}`;

            window.open(encodeURI(whatsappLink), '_blank');
        }

        showDialogWithInput(title, inputLabel, inputValidator, handleResult);
    }

    const formatPhone = (v) => {
        v = v.replace(/\D/g, "");             //Remove tudo o que não é dígito
        v = v.replace(/^(\d{2})(\d)/g, "($1) $2"); //Coloca parênteses em volta dos dois primeiros dígitos
        v = v.replace(/(\d)(\d{4})$/, "$1-$2");    //Coloca hífen entre o quarto e o quinto dígitos
        return v;
    }

    const onlyNumbers = (value) => value.replace(/\D/g, "");
</script>